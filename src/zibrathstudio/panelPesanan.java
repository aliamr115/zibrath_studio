/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package zibrathstudio;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import static zibrathstudio.dashboard.content;

/**
 *
 * @author alia
 */
public class panelPesanan extends javax.swing.JPanel {
   
    /**
     * Creates new form panelPesanan
     */
    public panelPesanan() {
        initComponents();
        load_tabel_pesanan();
    }
    void load_tabel_pesanan() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Pesanan");
        model.addColumn("Tanggal Pesan");
        model.addColumn("Harga");
        model.addColumn("Deadline");
        
        String sql = "SELECT * FROM pesanan";
        try {
            Connection conn = koneksi.konek();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {
                String IdPesanan = rs.getString("id_pesanan");
                String tglpesan = rs.getString("tgl_pesan");
                int Harga = rs.getInt("total_harga");
                String deadline = rs.getString("deadline");
                Object[] baris = {IdPesanan, tglpesan, Harga, deadline};
                model.addRow(baris);
            }
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Gagal mengambil data!");
        }
       tbPesanan.setModel(model);
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bSemua = new javax.swing.JButton();
        bDiproses = new javax.swing.JButton();
        bSelesai = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPesanan = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        bSemua.setBackground(new java.awt.Color(255, 102, 0));
        bSemua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bSemua.setForeground(new java.awt.Color(255, 255, 255));
        bSemua.setText("Semua");
        bSemua.setBorderPainted(false);
        bSemua.setFocusPainted(false);
        bSemua.setFocusable(false);
        bSemua.setOpaque(true);
        bSemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSemuaActionPerformed(evt);
            }
        });

        bDiproses.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bDiproses.setText("Sedang Diproses");
        bDiproses.setBorderPainted(false);
        bDiproses.setFocusPainted(false);
        bDiproses.setFocusable(false);
        bDiproses.setOpaque(true);
        bDiproses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDiprosesActionPerformed(evt);
            }
        });

        bSelesai.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bSelesai.setText("Selesai");
        bSelesai.setBorderPainted(false);
        bSelesai.setFocusPainted(false);
        bSelesai.setFocusable(false);
        bSelesai.setOpaque(true);
        bSelesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSelesaiActionPerformed(evt);
            }
        });

        tbPesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbPesanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPesananMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPesanan);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pesanan Masuk");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(bSemua)
                        .addGap(18, 18, 18)
                        .addComponent(bDiproses)
                        .addGap(18, 18, 18)
                        .addComponent(bSelesai)
                        .addGap(512, 512, 512)))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSemua)
                    .addComponent(bDiproses)
                    .addComponent(bSelesai))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void bDiprosesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDiprosesActionPerformed
        bSemua.setBackground(new Color(255,255,255));
        bSemua.setForeground(new Color(0,0,0));
        bDiproses.setBackground(new Color(255,102,0));
        bDiproses.setForeground(new Color(255,255,255));
        bSelesai.setBackground(new Color(255,255,255));
        bSelesai.setForeground(new Color(0,0,0));
        DefaultTableModel model = new DefaultTableModel();
        
        model.addColumn("ID Pesanan");
        model.addColumn("Tanggal Pesan");
        model.addColumn("Harga");
        model.addColumn("Deadline");
        
        String sql = "SELECT * FROM pesanan where status_pesanan = 'Sedang Diproses'";
        try {
            Connection conn = koneksi.konek();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {
                String IdPesanan = rs.getString("id_pesanan");
                String tglpesan = rs.getString("tgl_pesan");
                int Harga = rs.getInt("total_harga");
                String deadline = rs.getString("deadline");
                Object[] baris = {IdPesanan, tglpesan, Harga, deadline};
                model.addRow(baris);
            }
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Gagal mengambil data!");
        }
       tbPesanan.setModel(model);        
    }//GEN-LAST:event_bDiprosesActionPerformed

    private void bSelesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSelesaiActionPerformed
        bDiproses.setBackground(new Color(255,255,255));
        bDiproses.setForeground(new Color(0,0,0));
        bSelesai.setBackground(new Color(255,102,0));
        bSelesai.setForeground(new Color(255,255,255));
        bSemua.setBackground(new Color(255,255,255));
        bSemua.setForeground(new Color(0,0,0));
        DefaultTableModel model = new DefaultTableModel();
        
        model.addColumn("ID Pesanan");
        model.addColumn("Tanggal Pesan");
        model.addColumn("Harga");
        model.addColumn("Deadline");
        
        String sql = "SELECT * FROM pesanan where status_pesanan = 'Selesai'";
        try {
            Connection conn = koneksi.konek();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {
                String IdPesanan = rs.getString("id_pesanan");
                String tglpesan = rs.getString("tgl_pesan");
                int Harga = rs.getInt("total_harga");
                String deadline = rs.getString("deadline");
                Object[] baris = {IdPesanan, tglpesan, Harga, deadline};
                model.addRow(baris);
            }
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Gagal mengambil data!");
        }
       tbPesanan.setModel(model);    
    }//GEN-LAST:event_bSelesaiActionPerformed

    private void bSemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSemuaActionPerformed
        bDiproses.setBackground(new Color(255,255,255));
        bDiproses.setForeground(new Color(0,0,0));
        bSemua.setBackground(new Color(255,102,0));
        bSemua.setForeground(new Color(255,255,255));
        bSelesai.setBackground(new Color(255,255,255));
        bSelesai.setForeground(new Color(0,0,0));
        DefaultTableModel model = new DefaultTableModel();
        
        model.addColumn("ID Pesanan");
        model.addColumn("Tanggal Pesan");
        model.addColumn("Harga");
        model.addColumn("Deadline");
        
        String sql = "SELECT * FROM pesanan";
        try {
            Connection conn = koneksi.konek();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {
                String IdPesanan = rs.getString("id_pesanan");
                String tglpesan = rs.getString("tgl_pesan");
                int Harga = rs.getInt("total_harga");
                String deadline = rs.getString("deadline");
                Object[] baris = {IdPesanan, tglpesan, Harga, deadline};
                model.addRow(baris);
            }
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Gagal mengambil data!");
        }
       tbPesanan.setModel(model);   
    }//GEN-LAST:event_bSemuaActionPerformed

    private void tbPesananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPesananMouseClicked
        int row = tbPesanan.getSelectedRow();
        String ID = tbPesanan.getValueAt(row, 0).toString();

        // Buat panel baru
        panelDetail detailPanel = new panelDetail();

        // Isi data ke panel
        detailPanel.NoPes.setText(ID);
        detailPanel.load_tabel_Detail();

        // Tampilkan ke content
        content.removeAll();
        content.add(detailPanel);
        content.repaint();
        content.revalidate();
    }//GEN-LAST:event_tbPesananMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDiproses;
    private javax.swing.JButton bSelesai;
    private javax.swing.JButton bSemua;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPesanan;
    // End of variables declaration//GEN-END:variables
}
